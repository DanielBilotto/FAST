{"ast":null,"code":"var _jsxFileName = \"/Users/emilys/Documents/GitHub/FAST/src/Pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Redux imports\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/actions/userActions'; // UI imports\n\nimport { BsPersonFill } from 'react-icons/bs';\nimport { MdLock } from 'react-icons/md';\nimport { FaRegEye, FaRegEyeSlash } from 'react-icons/fa';\nimport { Heading, Text, FormControl, FormErrorMessage, InputGroup, InputLeftElement, InputRightElement, Input, Button, IconButton, VStack, Avatar } from '@chakra-ui/react';\nimport { ReactComponent as LoginAvatar } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/login-avatar.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // local State\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userError, setUserError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [show, setShow] = React.useState(false); // redux state and dispatch\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; // navigation\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (userInfo) {\n      navigate('/dashboard');\n    }\n  }, [navigate, userInfo]);\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setUserError(false);\n    setPasswordError(false);\n\n    if (typeof password !== 'string') {\n      setPasswordError(true);\n      setTimeout(() => {\n        setUserError(false);\n      }, 3500);\n      return;\n    }\n\n    if (!username || !password) {\n      if (!username) {\n        setUserError(true);\n        setTimeout(() => {\n          setUserError(false);\n        }, 3500);\n      }\n\n      if (!password) {\n        setPasswordError(true);\n        setTimeout(() => {\n          setPasswordError(false);\n        }, 3500);\n      }\n\n      return;\n    }\n\n    dispatch(login(username, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    width: \"100%\",\n    maxW: \"27rem\",\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      as: LoginAvatar,\n      size: \"2xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 5,\n      as: \"form\",\n      width: \"90%\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"username\",\n        isInvalid: userError,\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(BsPersonFill, {\n              color: \"darkgray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setUsername(target.value);\n            },\n            borderRadius: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: \"Invalid Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"password\",\n        isInvalid: passwordError,\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(MdLock, {\n              color: \"darkgray\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: show ? 'text' : 'password',\n            placeholder: \"Password\",\n            value: password,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setPassword(target.value);\n            },\n            borderRadius: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              backgroundColor: \"white\",\n              borderRadius: \"30px\",\n              color: \"darkgray\",\n              h: \"2.2rem\",\n              mr: \"0.8rem\",\n              px: \"1.95rem\",\n              size: \"lg\",\n              onClick: () => setShow(!show),\n              icon: show ? /*#__PURE__*/_jsxDEV(FaRegEye, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 22\n              }, this) : /*#__PURE__*/_jsxDEV(FaRegEyeSlash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: \"Invalid Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red\",\n        children: \"Invalid Username or Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"1rem\",\n        w: \"10rem\",\n        borderRadius: \"30px\",\n        colorScheme: \"twitter\",\n        type: \"submit\",\n        isLoading: loading,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n};\n/*function Login() {\n    return (\n        <div Classname='Login'>\n            <input type=\"text\" placeholder=\"username\" />\n            <input type=\"text\" placeholder=\"Password\" />\n            <Button>Login</Button>\n             \n        </div>\n    )\n}*/\n\n\n_s(Login, \"5kmLyCFrDJ894C+g96ZwAmR2wl4=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/emilys/Documents/GitHub/FAST/src/Pages/Login.js"],"names":["React","useState","useEffect","useNavigate","useDispatch","useSelector","login","BsPersonFill","MdLock","FaRegEye","FaRegEyeSlash","Heading","Text","FormControl","FormErrorMessage","InputGroup","InputLeftElement","InputRightElement","Input","Button","IconButton","VStack","Avatar","Login","username","setUsername","password","setPassword","userError","setUserError","passwordError","setPasswordError","show","setShow","dispatch","userLogin","state","loading","error","userInfo","navigate","handleLogin","e","preventDefault","setTimeout","LoginAvatar","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Redux imports\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/actions/userActions';\n\n// UI imports\nimport { BsPersonFill } from 'react-icons/bs';\nimport { MdLock } from 'react-icons/md';\nimport { FaRegEye, FaRegEyeSlash } from 'react-icons/fa';\nimport {\n\tHeading,\n\tText,\n\tFormControl,\n\tFormErrorMessage,\n\tInputGroup,\n\tInputLeftElement,\n\tInputRightElement,\n\tInput,\n\tButton,\n\tIconButton,\n\tVStack,\n\tAvatar\n} from '@chakra-ui/react';\nimport { ReactComponent as LoginAvatar } from '../../assets/login-avatar.svg';\n\nconst Login = () => {\n\t// local State\n\tconst [ username, setUsername ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ userError, setUserError ] = useState(false);\n\tconst [ passwordError, setPasswordError ] = useState(false);\n\tconst [ show, setShow ] = React.useState(false);\n\n\t// redux state and dispatch\n\tconst dispatch = useDispatch();\n\tconst userLogin = useSelector((state) => state.userLogin);\n\n\tconst { loading, error, userInfo } = userLogin;\n\n\t// navigation\n\tconst navigate = useNavigate();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (userInfo) {\n\t\t\t\tnavigate('/dashboard');\n\t\t\t}\n\t\t},\n\t\t[ navigate, userInfo ]\n\t);\n\n\tconst handleLogin = (e) => {\n\t\te.preventDefault();\n\t\tsetUserError(false);\n\t\tsetPasswordError(false);\n\n\t\tif (typeof password !== 'string') {\n\t\t\tsetPasswordError(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetUserError(false);\n\t\t\t}, 3500);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!username || !password) {\n\t\t\tif (!username) {\n\t\t\t\tsetUserError(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetUserError(false);\n\t\t\t\t}, 3500);\n\t\t\t}\n\n\t\t\tif (!password) {\n\t\t\t\tsetPasswordError(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetPasswordError(false);\n\t\t\t\t}, 3500);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(login(username, password));\n\t};\n\n\treturn (\n\t\t<VStack width=\"100%\" maxW=\"27rem\" spacing={5}>\n\t\t\t<Avatar as={LoginAvatar} size=\"2xl\" />\n\t\t\t<Heading as=\"h3\">Sign in</Heading>\n\t\t\t<VStack spacing={5} as=\"form\" width=\"90%\" onSubmit={handleLogin}>\n\t\t\t\t<FormControl id=\"username\" isInvalid={userError}>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputLeftElement\n\t\t\t\t\t\t\tpointerEvents=\"none\"\n\t\t\t\t\t\t\tchildren={<BsPersonFill color=\"darkgray\" />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\n\t\t\t\t\t\t\tborderRadius=\"30px\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t\t<FormErrorMessage>Invalid Username</FormErrorMessage>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl id=\"password\" isInvalid={passwordError}>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputLeftElement\n\t\t\t\t\t\t\tpointerEvents=\"none\"\n\t\t\t\t\t\t\tchildren={<MdLock color=\"darkgray\" />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype={show ? 'text' : 'password'}\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\n\t\t\t\t\t\t\tborderRadius=\"30px\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputRightElement>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tbackgroundColor=\"white\"\n\t\t\t\t\t\t\t\tborderRadius=\"30px\"\n\t\t\t\t\t\t\t\tcolor=\"darkgray\"\n\t\t\t\t\t\t\t\th=\"2.2rem\"\n\t\t\t\t\t\t\t\tmr=\"0.8rem\"\n\t\t\t\t\t\t\t\tpx=\"1.95rem\"\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\tonClick={() => setShow(!show)}\n\t\t\t\t\t\t\t\ticon={show ? <FaRegEye /> : <FaRegEyeSlash />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputRightElement>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t\t<FormErrorMessage>Invalid Password</FormErrorMessage>\n\t\t\t\t</FormControl>\n\t\t\t\t{error && <Text color=\"red\">Invalid Username or Password</Text>}\n\t\t\t\t<Button\n\t\t\t\t\tmt=\"1rem\"\n\t\t\t\t\tw=\"10rem\"\n\t\t\t\t\tborderRadius=\"30px\"\n\t\t\t\t\tcolorScheme=\"twitter\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tisLoading={loading}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</VStack>\n\t\t</VStack>\n\t);\n};\n\n\n\n\n\n\n/*function Login() {\n    return (\n        <div Classname='Login'>\n            <input type=\"text\" placeholder=\"username\" />\n            <input type=\"text\" placeholder=\"Password\" />\n            <Button>Login</Button>\n             \n        </div>\n    )\n}*/\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}